package br.com.agentemaps.model;
// Generated 26/09/2016 16:25:14 by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * DestinoFezes generated by hbm2java
 */
@Entity
@Table(name = "destino_fezes", catalog = "agentemaps")
public class DestinoFezes implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4497908549258900810L;
	private int familiaId;
	private Familia familia;
	private Byte sistemaEsgoto;
	private Byte fossa;
	private Byte ceuAberto;

	public DestinoFezes() {
	}

	public DestinoFezes(Familia familia) {
		this.familia = familia;
	}

	public DestinoFezes(Familia familia, Byte sistemaEsgoto, Byte fossa, Byte ceuAberto) {
		this.familia = familia;
		this.sistemaEsgoto = sistemaEsgoto;
		this.fossa = fossa;
		this.ceuAberto = ceuAberto;
	}

	@GenericGenerator(name = "fk_destino_fezes_familia", strategy = "foreign", parameters = @Parameter(name = "property", value = "familia"))
	@Id
	@GeneratedValue(generator = "fk_destino_fezes_familia")

	@Column(name = "familia_id", unique = true, nullable = false)
	public int getFamiliaId() {
		return this.familiaId;
	}

	public void setFamiliaId(int familiaId) {
		this.familiaId = familiaId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Familia getFamilia() {
		return this.familia;
	}

	public void setFamilia(Familia familia) {
		this.familia = familia;
	}

	@Column(name = "sistema_esgoto")
	public Byte getSistemaEsgoto() {
		return this.sistemaEsgoto;
	}

	public void setSistemaEsgoto(Byte sistemaEsgoto) {
		this.sistemaEsgoto = sistemaEsgoto;
	}

	@Column(name = "fossa")
	public Byte getFossa() {
		return this.fossa;
	}

	public void setFossa(Byte fossa) {
		this.fossa = fossa;
	}

	@Column(name = "ceu_aberto")
	public Byte getCeuAberto() {
		return this.ceuAberto;
	}

	public void setCeuAberto(Byte ceuAberto) {
		this.ceuAberto = ceuAberto;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((ceuAberto == null) ? 0 : ceuAberto.hashCode());
		result = prime * result + ((familia == null) ? 0 : familia.hashCode());
		result = prime * result + familiaId;
		result = prime * result + ((fossa == null) ? 0 : fossa.hashCode());
		result = prime * result + ((sistemaEsgoto == null) ? 0 : sistemaEsgoto.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DestinoFezes other = (DestinoFezes) obj;
		if (ceuAberto == null) {
			if (other.ceuAberto != null)
				return false;
		} else if (!ceuAberto.equals(other.ceuAberto))
			return false;
		if (familia == null) {
			if (other.familia != null)
				return false;
		} else if (!familia.equals(other.familia))
			return false;
		if (familiaId != other.familiaId)
			return false;
		if (fossa == null) {
			if (other.fossa != null)
				return false;
		} else if (!fossa.equals(other.fossa))
			return false;
		if (sistemaEsgoto == null) {
			if (other.sistemaEsgoto != null)
				return false;
		} else if (!sistemaEsgoto.equals(other.sistemaEsgoto))
			return false;
		return true;
	}
	
	

}
