package br.com.agentemaps.model;
// Generated 30/09/2016 10:26:29 by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Situacao generated by hbm2java
 */
@Entity
@Table(name = "situacao", catalog = "agentemaps")
public class Situacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5393800139634470991L;
	private int familiaId;
	private Familia familia;
	private boolean tijoloAdobe;
	private boolean taipaRevestida;
	private boolean taipaNaoRevistida;
	private boolean mandeira;
	private boolean materialAproveitado;
	private String outroEspecificar;
	private boolean numeroComodo;
	private boolean energiaEletrica;
	private boolean coletado;
	private boolean queimadoEnterrado;
	private boolean ceuAberto;
	private boolean filtracao;
	private boolean fervura;
	private boolean cloracao;
	private boolean semTratamento;
	private boolean redeGeral;
	private boolean pocoNascente;
	private String outros;
	private boolean sistemaEsgoto;
	private boolean fossa;
	private boolean ceuExposto;

	public Situacao() {
	}

	public Situacao(Familia familia, boolean tijoloAdobe, boolean taipaRevestida, boolean taipaNaoRevistida,
			boolean mandeira, boolean materialAproveitado, String outroEspecificar, boolean numeroComodo,
			boolean energiaEletrica, boolean coletado, boolean queimadoEnterrado, boolean ceuAberto, boolean filtracao,
			boolean fervura, boolean cloracao, boolean semTratamento, boolean redeGeral, boolean pocoNascente,
			String outros, boolean sistemaEsgoto, boolean fossa, boolean ceuExposto) {
		this.familia = familia;
		this.tijoloAdobe = tijoloAdobe;
		this.taipaRevestida = taipaRevestida;
		this.taipaNaoRevistida = taipaNaoRevistida;
		this.mandeira = mandeira;
		this.materialAproveitado = materialAproveitado;
		this.outroEspecificar = outroEspecificar;
		this.numeroComodo = numeroComodo;
		this.energiaEletrica = energiaEletrica;
		this.coletado = coletado;
		this.queimadoEnterrado = queimadoEnterrado;
		this.ceuAberto = ceuAberto;
		this.filtracao = filtracao;
		this.fervura = fervura;
		this.cloracao = cloracao;
		this.semTratamento = semTratamento;
		this.redeGeral = redeGeral;
		this.pocoNascente = pocoNascente;
		this.outros = outros;
		this.sistemaEsgoto = sistemaEsgoto;
		this.fossa = fossa;
		this.ceuExposto = ceuExposto;
	}

	@GenericGenerator(name = "fk_situacao_familia", strategy = "foreign", parameters = @Parameter(name = "property", value = "familia"))
	@Id
	@GeneratedValue(generator = "fk_situacao_familia")

	@Column(name = "familia_id", unique = true, nullable = false)
	public int getFamiliaId() {
		return this.familiaId;
	}

	public void setFamiliaId(int familiaId) {
		this.familiaId = familiaId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Familia getFamilia() {
		return this.familia;
	}

	public void setFamilia(Familia familia) {
		this.familia = familia;
	}

	@Column(name = "tijolo_adobe", nullable = false)
	public boolean isTijoloAdobe() {
		return this.tijoloAdobe;
	}

	public void setTijoloAdobe(boolean tijoloAdobe) {
		this.tijoloAdobe = tijoloAdobe;
	}

	@Column(name = "taipa_revestida", nullable = false)
	public boolean isTaipaRevestida() {
		return this.taipaRevestida;
	}

	public void setTaipaRevestida(boolean taipaRevestida) {
		this.taipaRevestida = taipaRevestida;
	}

	@Column(name = "taipa_nao_revistida", nullable = false)
	public boolean isTaipaNaoRevistida() {
		return this.taipaNaoRevistida;
	}

	public void setTaipaNaoRevistida(boolean taipaNaoRevistida) {
		this.taipaNaoRevistida = taipaNaoRevistida;
	}

	@Column(name = "mandeira", nullable = false)
	public boolean isMandeira() {
		return this.mandeira;
	}

	public void setMandeira(boolean mandeira) {
		this.mandeira = mandeira;
	}

	@Column(name = "material_aproveitado", nullable = false)
	public boolean isMaterialAproveitado() {
		return this.materialAproveitado;
	}

	public void setMaterialAproveitado(boolean materialAproveitado) {
		this.materialAproveitado = materialAproveitado;
	}

	@Column(name = "outro_especificar", nullable = false)
	public String getOutroEspecificar() {
		return this.outroEspecificar;
	}

	public void setOutroEspecificar(String outroEspecificar) {
		this.outroEspecificar = outroEspecificar;
	}

	@Column(name = "numero_comodo", nullable = false)
	public boolean isNumeroComodo() {
		return this.numeroComodo;
	}

	public void setNumeroComodo(boolean numeroComodo) {
		this.numeroComodo = numeroComodo;
	}

	@Column(name = "energia_eletrica", nullable = false)
	public boolean isEnergiaEletrica() {
		return this.energiaEletrica;
	}

	public void setEnergiaEletrica(boolean energiaEletrica) {
		this.energiaEletrica = energiaEletrica;
	}

	@Column(name = "coletado", nullable = false)
	public boolean isColetado() {
		return this.coletado;
	}

	public void setColetado(boolean coletado) {
		this.coletado = coletado;
	}

	@Column(name = "queimado_enterrado", nullable = false)
	public boolean isQueimadoEnterrado() {
		return this.queimadoEnterrado;
	}

	public void setQueimadoEnterrado(boolean queimadoEnterrado) {
		this.queimadoEnterrado = queimadoEnterrado;
	}

	@Column(name = "ceu_aberto", nullable = false)
	public boolean isCeuAberto() {
		return this.ceuAberto;
	}

	public void setCeuAberto(boolean ceuAberto) {
		this.ceuAberto = ceuAberto;
	}

	@Column(name = "filtracao", nullable = false)
	public boolean isFiltracao() {
		return this.filtracao;
	}

	public void setFiltracao(boolean filtracao) {
		this.filtracao = filtracao;
	}

	@Column(name = "fervura", nullable = false)
	public boolean isFervura() {
		return this.fervura;
	}

	public void setFervura(boolean fervura) {
		this.fervura = fervura;
	}

	@Column(name = "cloracao", nullable = false)
	public boolean isCloracao() {
		return this.cloracao;
	}

	public void setCloracao(boolean cloracao) {
		this.cloracao = cloracao;
	}

	@Column(name = "sem_tratamento", nullable = false)
	public boolean isSemTratamento() {
		return this.semTratamento;
	}

	public void setSemTratamento(boolean semTratamento) {
		this.semTratamento = semTratamento;
	}

	@Column(name = "rede_geral", nullable = false)
	public boolean isRedeGeral() {
		return this.redeGeral;
	}

	public void setRedeGeral(boolean redeGeral) {
		this.redeGeral = redeGeral;
	}

	@Column(name = "poco_nascente", nullable = false)
	public boolean isPocoNascente() {
		return this.pocoNascente;
	}

	public void setPocoNascente(boolean pocoNascente) {
		this.pocoNascente = pocoNascente;
	}

	@Column(name = "outros", nullable = false)
	public String getOutros() {
		return this.outros;
	}

	public void setOutros(String outros) {
		this.outros = outros;
	}

	@Column(name = "sistema_esgoto", nullable = false)
	public boolean isSistemaEsgoto() {
		return this.sistemaEsgoto;
	}

	public void setSistemaEsgoto(boolean sistemaEsgoto) {
		this.sistemaEsgoto = sistemaEsgoto;
	}

	@Column(name = "fossa", nullable = false)
	public boolean isFossa() {
		return this.fossa;
	}

	public void setFossa(boolean fossa) {
		this.fossa = fossa;
	}

	@Column(name = "ceu_exposto", nullable = false)
	public boolean isCeuExposto() {
		return this.ceuExposto;
	}

	public void setCeuExposto(boolean ceuExposto) {
		this.ceuExposto = ceuExposto;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (ceuAberto ? 1231 : 1237);
		result = prime * result + (ceuExposto ? 1231 : 1237);
		result = prime * result + (cloracao ? 1231 : 1237);
		result = prime * result + (coletado ? 1231 : 1237);
		result = prime * result + (energiaEletrica ? 1231 : 1237);
		result = prime * result + ((familia == null) ? 0 : familia.hashCode());
		result = prime * result + familiaId;
		result = prime * result + (fervura ? 1231 : 1237);
		result = prime * result + (filtracao ? 1231 : 1237);
		result = prime * result + (fossa ? 1231 : 1237);
		result = prime * result + (mandeira ? 1231 : 1237);
		result = prime * result + (materialAproveitado ? 1231 : 1237);
		result = prime * result + (numeroComodo ? 1231 : 1237);
		result = prime * result + ((outroEspecificar == null) ? 0 : outroEspecificar.hashCode());
		result = prime * result + ((outros == null) ? 0 : outros.hashCode());
		result = prime * result + (pocoNascente ? 1231 : 1237);
		result = prime * result + (queimadoEnterrado ? 1231 : 1237);
		result = prime * result + (redeGeral ? 1231 : 1237);
		result = prime * result + (semTratamento ? 1231 : 1237);
		result = prime * result + (sistemaEsgoto ? 1231 : 1237);
		result = prime * result + (taipaNaoRevistida ? 1231 : 1237);
		result = prime * result + (taipaRevestida ? 1231 : 1237);
		result = prime * result + (tijoloAdobe ? 1231 : 1237);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Situacao other = (Situacao) obj;
		if (ceuAberto != other.ceuAberto)
			return false;
		if (ceuExposto != other.ceuExposto)
			return false;
		if (cloracao != other.cloracao)
			return false;
		if (coletado != other.coletado)
			return false;
		if (energiaEletrica != other.energiaEletrica)
			return false;
		if (familia == null) {
			if (other.familia != null)
				return false;
		} else if (!familia.equals(other.familia))
			return false;
		if (familiaId != other.familiaId)
			return false;
		if (fervura != other.fervura)
			return false;
		if (filtracao != other.filtracao)
			return false;
		if (fossa != other.fossa)
			return false;
		if (mandeira != other.mandeira)
			return false;
		if (materialAproveitado != other.materialAproveitado)
			return false;
		if (numeroComodo != other.numeroComodo)
			return false;
		if (outroEspecificar == null) {
			if (other.outroEspecificar != null)
				return false;
		} else if (!outroEspecificar.equals(other.outroEspecificar))
			return false;
		if (outros == null) {
			if (other.outros != null)
				return false;
		} else if (!outros.equals(other.outros))
			return false;
		if (pocoNascente != other.pocoNascente)
			return false;
		if (queimadoEnterrado != other.queimadoEnterrado)
			return false;
		if (redeGeral != other.redeGeral)
			return false;
		if (semTratamento != other.semTratamento)
			return false;
		if (sistemaEsgoto != other.sistemaEsgoto)
			return false;
		if (taipaNaoRevistida != other.taipaNaoRevistida)
			return false;
		if (taipaRevestida != other.taipaRevestida)
			return false;
		if (tijoloAdobe != other.tijoloAdobe)
			return false;
		return true;
	}

}
